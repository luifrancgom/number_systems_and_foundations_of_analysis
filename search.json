[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Number Systems and the Foundations of Analysis",
    "section": "",
    "text": "Preface\nThe aim of this book is to study the basic number system of mathematics using as a principal guide Mendelson (2008) and other supplementary materials.\nThe idea is to develop all the topics and solve the exercises proposed in Mendelson (2008) as it has done in Mathematical Adventures\n\n\n\n\nMendelson, Elliott. 2008. Number Systems and the Foundations of Analysis. Mineola, N.Y: Dover Publications.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "chapter_1.html",
    "href": "chapter_1.html",
    "title": "1  Basic Facts and Notions of Logic and Set Theory",
    "section": "",
    "text": "1.1 Propositional logic\nPropositional logic attempts to make precise the relationships that certain connectives like not, and, or, and if … then (Bilaniuk 2009, x).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>See https://quarto.org/docs/computations/execution-options.html#engine-binding to specify why knitr is used</span>"
    ]
  },
  {
    "objectID": "chapter_1.html#propositional-logic",
    "href": "chapter_1.html#propositional-logic",
    "title": "1  Basic Facts and Notions of Logic and Set Theory",
    "section": "",
    "text": "1.1.1 Language\nFirst we will define the formal language of propositional logic, \\(\\mathcal{L}_P\\), by specifying the symbols and formulas\n\nDefinition 1.1 (Symbols of \\(\\mathcal{L}_P\\)) The symbols of \\(\\mathcal{L}_P\\) are:\n\nParentheses: \\((\\) and \\()\\)\nConnectives: \\(\\neg\\) and \\(\\Longrightarrow\\)\nAtomic formulas: \\(A_0, A_1, A_2, \\ldots, A_n, \\ldots\\)\n\n\nThen we specify the ways in which the symbols of \\(\\mathcal{L}_P\\) can be put together.\n\nDefinition 1.2 (Formulas of \\(\\mathcal{L}_P\\)) The formulas of \\(\\mathcal{L}_P\\) are those finite sequences or strings of the symbols given in Definition 1.1 which satisfy the following rules:\n\nEvery atomic formula is a formula\nIf \\(\\alpha\\) is a formula, then \\((\\neg \\alpha)\\) is a formula\nIf \\(\\alpha\\) and \\(\\beta\\) are formulas, then \\((\\alpha \\Longrightarrow \\beta)\\) is a formula\nNo other sequence of symbols is a formula\n\n\nIn Definition 1.1 and Definition 1.2 parentheses are just punctuation where their purpose is to group other symbols together, \\(\\neg\\) and \\(\\Longrightarrow\\) represent the connectives not and if … then and the atomic formulas represent statements that cannot be broken down any further using our connectives. Finally we specify that a well formed formula can only be obtained by the first 3 rules pointed out in Definition 1.21.\n\nExercise 1.1 Show that every formula of \\(\\mathcal{L}_P\\) has the same number of left parentheses as it has of right parentheses.\n\n\nSolution 1.1. By strong induction on \\(n\\), the number of connectives (occurrences of \\(\\neg\\) or \\(\\Longrightarrow\\)) in a formula \\(\\varphi\\) of \\(\\mathcal{L}_P\\)\nBase step \\((n = 0)\\): If \\(\\varphi\\) is a formula of \\(\\mathcal{L}_P\\) with no connectives by Definition 1.2 is an atomic formula. Since an atomic formula has no parentheses is has the same left as right parentheses.\nInduction hypothesis \\((n \\leq k)\\): Assume a formula with \\(n \\leq k\\) connectives has the same left as right parentheses.\nInduction step \\((n = k + 1)\\): Suppose \\(\\varphi\\) is a formula with \\(n = k + 1\\) connectives. From Definition 1.2 \\(\\varphi\\) must be either:\n\n\\((\\neg \\alpha)\\) for some formula \\(\\alpha\\) with \\(k\\) connectives.\n\nBy the induction hypothesis \\(\\alpha\\) has the same left as right parentheses so \\((\\neg \\alpha)\\) also have the same left as right parentheses.\n\n\\((\\beta \\Longrightarrow \\gamma)\\) for some formulas \\(\\beta\\) and \\(\\gamma\\) with \\(\\leq k\\) connectives each.\n\nBy the induction hypothesis \\(\\beta\\) and \\(\\gamma\\) have the same left as right parentheses so \\((\\beta \\Longrightarrow \\gamma)\\) also has the same left as right parentheses.\n\n\n\n\nExercise 1.2 Suppose \\(\\alpha\\) is any formula of \\(\\mathcal{L}_P\\). Let \\(l(\\alpha)\\) be the length of \\(\\alpha\\) as a sequence of symbols and let \\(p(\\alpha)\\) be the number of parentheses (counting both left and right parentheses) in \\(\\alpha\\). What are the minimum and maximum values of \\(\\frac{p(\\alpha)}{l(\\alpha)}\\)?\n\n\nSolution 1.2. The minimum value of \\(p(\\alpha)\\) is \\(0\\) when \\(\\alpha\\) is an atomic formula. Therefore the minimum value of \\(\\frac{p(\\alpha)}{l(\\alpha)}\\) is \\(0\\) because \\(p(\\alpha) \\geq 0\\) and \\(l(\\alpha) \\geq 1\\).\nIn the case of other values lets inspect the possible values of \\(p(\\alpha)\\) and \\(l(\\alpha)\\):\n\nFor \\(p(\\alpha)\\) the possible values are \\(0, 2, 4, \\ldots, 2m, \\ldots\\).\nFor \\(l(\\alpha)\\) we can begin with an atomic formula, \\(A_0\\), and then add \\(3\\) or \\(4\\) symbols to create a well formed formula:\n\n\\((\\neg A_0)\\)\n\\((A_0 \\Longrightarrow A_1)\\)\n\n\nWhere the possible values of \\(l(\\alpha)\\) are \\(1, 4, 5, 7, 8, \\ldots, s - 1, s, s + 1, \\ldots\\) as it is shown in Figure 1.1 where the majority of duplicate branches with the same lengths are omitted but can be different in relation to \\(p(\\alpha)\\).\n\n\n\n\n\n\n\n\nFigure 1.1: Possible values of \\(l(\\alpha)\\) and associated \\(p(\\alpha)\\) values in parentheses\n\n\n\n\n\nTherefore we can examine the leftmost branch.\n\nFor the lefmost branch we have for \\(\\frac{p(\\alpha)}{l(\\alpha)} = \\frac{0}{1}, \\frac{2}{4}, \\frac{4}{7}, \\frac{6}{10}, \\frac{8}{13}, \\ldots, \\frac{2n}{3n + 1}, \\ldots\\). Therefore \\(\\lim_{n \\to \\infty} \\frac{2n}{3n + 1} = \\lim_{n \\to \\infty} \\frac{2}{3} = \\frac{2}{3}\\).\n\nTherefore \\(0 \\leq \\frac{p(\\alpha)}{l(\\alpha)}\\) and \\(\\frac{p(\\alpha)}{l(\\alpha)} &lt; \\frac{2}{3}\\) for the lefmost branch\n\n\nExercise 1.3 Suppose \\(\\alpha\\) is any formula of \\(\\mathcal{L}_P\\). Let \\(s(\\alpha)\\) be the number of atomic formulas in \\(\\alpha\\) (counting repetitions) and let \\(c(\\alpha)\\) be the number of occurrences of \\(\\Longrightarrow\\) in \\(\\alpha\\). Show that \\(s(\\alpha) = c(\\alpha) + 1\\).\n\n\nSolution 1.3. By strong induction on \\(n\\), the number of connectives (occurrences of \\(\\neg\\) or \\(\\Longrightarrow\\)) in a formula \\(\\varphi\\) of \\(\\mathcal{L}_P\\)\nBase step \\((n = 0)\\): If \\(\\varphi\\) is a formula of \\(\\mathcal{L}_P\\) with no connectives by Definition 1.2 is an atomic formula. Since an atomic formula has no \\(\\Longrightarrow\\) then \\(c(\\varphi) = 0\\) and \\(s(\\varphi) = 1\\) and so \\(s(\\varphi) = c(\\varphi) + 1\\).\nInduction hypothesis \\((n \\leq k)\\): Assume that for a formula with \\(n \\leq k\\) connectives \\(s(\\varphi) = c(\\varphi) + 1\\).\nInduction step \\((n = k + 1)\\): Suppose \\(\\varphi\\) is a formula with \\(n = k + 1\\) connectives. From Definition 1.2 \\(\\varphi\\) must be either:\n\n\\((\\neg \\alpha)\\) for some formula \\(\\alpha\\) with \\(k\\) connectives.\n\nBy the induction hypothesis for \\(\\alpha\\) we have that \\(s(\\alpha) = c(\\alpha) + 1\\). Therefore for \\((\\neg \\alpha)\\) we have also that \\(s((\\neg \\alpha)) = c((\\neg \\alpha)) + 1\\).\n\n\\((\\beta \\Longrightarrow \\gamma)\\) for some formulas \\(\\beta\\) and \\(\\gamma\\) with \\(\\leq k\\) connectives each.\n\nBy the induction hypothesis for \\(\\beta\\) and \\(\\gamma\\) we have that \\(s(\\beta) = c(\\beta) + 1\\) and \\(s(\\gamma) = c(\\gamma) + 1\\). Therefore \\(s((\\beta \\Longrightarrow \\gamma)) = c(\\beta) + c(\\gamma) + 1 + 1\\). But \\(c(\\beta) + c(\\gamma) + 1 = c((\\beta \\Longrightarrow \\gamma))\\) so \\(s((\\beta \\Longrightarrow \\gamma)) = c((\\beta \\Longrightarrow \\gamma)) + 1\\)\n\n\n\n\n\nExercise 1.4 What are the possible lengths of formulas of \\(\\mathcal{L}_P\\)? Prove it.\n\n\nSolution 1.4. Using Solution 1.2 and Figure 1.1 the possible possible lengths of formulas of \\(\\mathcal{L}_P\\) are \\(1, 4, 5, 7, 8, \\ldots, s - 1, s, s + 1, \\ldots\\).\n\n\nExercise 1.5 Find a way for doing without parentheses or other punctuation symbols in defining a formal language for \\(\\mathcal{L}_P\\).\n\n\nSolution 1.5. See (Łukasiewicz and Borkowski 1970, 180) which is called Lukasiewicz or Polish notation\nIn Polish notation, logical operators are placed before their operands. This prefix positioning eliminates the need for parentheses, as the order of operations is strictly determined by the operator sequence.\nSo using Definition 1.2 we have that:\n\nEvery atomic formula is a formula\nIf \\(\\alpha\\) is a formula, then \\(\\neg \\alpha\\) is a formula\nIf \\(\\alpha\\) and \\(\\beta\\) are formulas, then \\(\\Longrightarrow \\alpha \\beta\\) is a formula\nNo other sequence of symbols is a formula\n\nFor example \\((((\\neg \\alpha) \\Longrightarrow \\beta) \\Longrightarrow (\\neg \\gamma))\\) can be written using Polish and modern notation as \\(\\Longrightarrow \\Longrightarrow \\neg \\alpha \\beta \\neg \\gamma\\)\nAlso Polish notation is not ambiguous. For example:\n\n\\(((\\alpha \\Longrightarrow \\beta) \\Longrightarrow \\gamma)\\) is written as \\(\\Longrightarrow \\Longrightarrow \\alpha \\beta \\gamma\\)\n\\((\\alpha \\Longrightarrow (\\beta \\Longrightarrow \\gamma))\\) is written as \\(\\Longrightarrow \\alpha \\Longrightarrow \\beta \\gamma\\)\n\n\n\nExercise 1.6 Show that the set of formulas of \\(\\mathcal{L}_P\\) is countable.\n\n\nSolution 1.6. Pending\n\n\n1.1.1.1 Informal conventions\nWe will use the symbols \\(\\land\\), \\(\\lor\\), and \\(\\iff\\) to represent and, or and if and only if respectively. Since they are not among the symbols of \\(\\mathcal{L}_P\\), we will use them as abbreviations for certain constructions involving only \\(\\neg\\) and \\(\\Longrightarrow\\). Namely:\n\n\\((\\alpha \\land \\beta)\\) is short for \\((\\neg(\\alpha \\Longrightarrow (\\neg \\beta)))\\),\n\\((\\alpha \\lor \\beta)\\) is short for \\((( \\neg \\alpha) \\Longrightarrow \\beta)\\), and\n\\((\\alpha \\iff \\beta)\\) is short for \\(((\\alpha \\Longrightarrow \\beta) \\land (\\beta \\Longrightarrow \\alpha))\\)\n\n\nDefinition 1.3 (Subformulas) Suppose \\(\\varphi\\) is a formula of \\(\\mathcal{L}_p\\). The set of subformulas of \\(\\varphi\\), \\(S(\\varphi)\\), is defined as follows:\n\nIf \\(\\varphi\\) is an atomic formula then \\(S(\\varphi) = \\{ \\varphi \\}\\)\nIf \\(\\varphi\\) is \\((\\neg \\alpha)\\) then \\(S(\\varphi) = S(\\alpha) \\cup \\{ (\\neg \\alpha) \\}\\)\nIf \\(\\varphi\\) is \\((\\alpha \\Longrightarrow \\beta)\\) then \\(S(\\varphi) = S(\\alpha) \\cup S(\\beta) \\cup \\{ (\\alpha \\Longrightarrow \\beta) \\}\\)\n\n\n\nExercise 1.7 Find all the subformulas of each of the following formulas.\n\n\\((\\neg((\\neg A_{56}) \\Longrightarrow A_{56}))\\)\n\\((A_9 \\Longrightarrow (A_8 \\Longrightarrow (\\neg (A_{78} \\Longrightarrow (\\neg (\\neg A_0))))))\\)\n\\((((\\neg A_0) \\land (\\neg A_1)) \\iff (\\neg (A_0 \\lor A_1)))\\)\n\n\n\nSolution 1.7. \\[\\begin{split}\n   S((\\neg((\\neg A_{56}) \\Longrightarrow A_{56}))) & = S(((\\neg A_{56}) \\Longrightarrow A_{56})) \\cup \\{ (\\neg((\\neg A_{56}) \\Longrightarrow A_{56})) \\} \\\\\n    & = \\{ A_{56}, (\\neg A_{56}), ((\\neg A_{56}) \\Longrightarrow A_{56}), \\\\\n    & \\;\\;\\;\\;\\;\\; (\\neg((\\neg A_{56}) \\Longrightarrow A_{56})) \\}\n     \\end{split}\\]\n\\[\\begin{split}\n   S((A_9 \\Longrightarrow (A_8 \\Longrightarrow (\\neg (A_{78} \\Longrightarrow (\\neg (\\neg A_0))))))) & = S(A_9) \\cup S((A_8 \\Longrightarrow (\\neg (A_{78} \\Longrightarrow (\\neg (\\neg A_0)))))) \\cup \\{ (A_9 \\Longrightarrow (A_8 \\Longrightarrow (\\neg (A_{78} \\Longrightarrow (\\neg (\\neg A_0)))))) \\} \\\\\n    & = \\{ A_9, A_8, A_{78}, A_0, (\\neg A_0), \\\\\n    & \\;\\;\\;\\;\\;\\; (\\neg(\\neg A_0)), (A_{78} \\Longrightarrow (\\neg (\\neg A_0))), \\\\\n    & \\;\\;\\;\\;\\;\\; (\\neg (A_{78} \\Longrightarrow (\\neg (\\neg A_0)))), \\\\\n    & \\;\\;\\;\\;\\;\\; (A_8 \\Longrightarrow (\\neg (A_{78} \\Longrightarrow (\\neg (\\neg A_0))))), \\\\\n    & \\;\\;\\;\\;\\;\\; (A_9 \\Longrightarrow (A_8 \\Longrightarrow (\\neg (A_{78} \\Longrightarrow (\\neg (\\neg A_0)))))) \\}\n     \\end{split}\\]\nLet \\(\\varphi = (((\\neg A_0) \\land (\\neg A_1)) \\Longrightarrow (\\neg (A_0 \\lor A_1)))\\) and \\(\\sigma = ((\\neg (A_0 \\lor A_1)) \\Longrightarrow ((\\neg A_0) \\land (\\neg A_1)))\\)\n\\[\\begin{split}\n   S((((\\neg A_0) \\land (\\neg A_1)) \\iff (\\neg (A_0 \\lor A_1)))) & = S((\\varphi \\Longrightarrow (\\neg \\sigma))) \\cup \\{ (\\neg (\\varphi \\Longrightarrow (\\neg \\sigma)))\\} \\\\\n   & = \\{ A_0, A_1, (\\neg A_0), (\\neg A_1), (\\neg (\\neg A_1) ), \\\\\n   & \\;\\;\\;\\;\\;\\; (A_0 \\lor A_1), ((\\neg A_0) \\Longrightarrow (\\neg (\\neg A_1))), \\\\\n   & \\;\\;\\;\\;\\;\\; (\\neg (A_0 \\lor A_1)), ((\\neg A_0) \\land (\\neg A_1)) \\\\\n   & \\;\\;\\;\\;\\;\\; \\sigma, (\\neg \\sigma), \\varphi, \\\\\n   & \\;\\;\\;\\;\\;\\; (\\varphi \\Longrightarrow (\\neg \\sigma)), \\\\\n   & \\;\\;\\;\\;\\;\\; (\\neg(\\varphi \\Longrightarrow (\\neg \\sigma))) \\}\n     \\end{split}\\]\n\n\n\n1.1.1.2 Unique Readability\nTo ensure that the formulas of \\(\\mathcal{L}_p\\) are unambiguous (can be read in only one way according to the rules given in Definition 1.2) one must add to Definition 1.1 the requirement that all the symbols of \\(\\mathcal{L}_p\\) are distinct and that no symbol is a subsequence of any other symbol.\n\nTheorem 1.1 (Unique Readability) A formula of \\(\\mathcal{L}_p\\) must satisfy exactly one of the first 3 conditions in Definition 1.2.\n\n\nProof. By strong induction on \\(n\\), the number of connectives (occurrences of \\(\\neg\\) or \\(\\Longrightarrow\\)) in a formula \\(\\varphi\\) of \\(\\mathcal{L}_P\\)\nBase step \\((n = 0)\\): If \\(\\varphi\\) is a formula of \\(\\mathcal{L}_P\\) with no connectives by Definition 1.2 is an atomic formula. Since an atomic formula has no connectives it can not of the form \\((\\neg \\varphi)\\) or \\((\\alpha \\Longrightarrow \\beta)\\).\nInduction hypothesis \\((n \\leq k)\\): Assume a formula with \\(n \\leq k\\) connectives must satisfy exactly one of the first 3 conditions in Definition 1.2.\nInduction step \\((n = k + 1)\\): Suppose \\(\\varphi\\) is a formula with \\(n = k + 1\\) connectives. From Definition 1.2 \\(\\varphi\\) must be either:\n\n\\((\\neg \\alpha)\\) for some formula \\(\\alpha\\) with \\(k\\) connectives.\n\nBy the induction hypothesis \\(\\alpha\\) must satisfy exactly one of the first 3 conditions in Definition 1.2.\n\nBecause \\(\\alpha\\) satisfy exactly one of the first 3 conditions in Definition 1.2 then \\((\\neg \\alpha)\\) can’t be an atomic formula because an atomic formula doesn’t have connectives.\nNow assume that \\((\\neg \\alpha)\\) can be expressed as \\((\\beta \\Longrightarrow \\gamma)\\). Then \\(\\neg \\alpha\\) will be equal to \\(\\beta \\Longrightarrow \\gamma\\). However \\(\\alpha\\) satisfy exactly one of the first 3 conditions in Definition 1.2 so it will be impossible that \\(\\neg \\alpha\\) and \\(\\beta \\Longrightarrow \\gamma\\) are equal.\n\nTherefore \\((\\neg \\alpha)\\) satisfy exactly the 2 condition in Definition 1.2.\n\n\n\n\\((\\beta \\Longrightarrow \\gamma)\\) for some formulas \\(\\beta\\) and \\(\\gamma\\) with \\(\\leq k\\) connectives each.\n\nBy the induction hypothesis \\(\\beta\\) and \\(\\gamma\\) must satisfy exactly one of the first 3 conditions in Definition 1.2.\n\nBecause \\(\\beta\\) and \\(\\gamma\\) satisfy exactly one of the first 3 conditions in Definition 1.2 then \\((\\beta \\Longrightarrow \\gamma)\\) can’t be an atomic formula because an atomic formula doesn’t have connectives.\nNow assume that \\((\\beta \\Longrightarrow \\gamma)\\) can be expressed as \\((\\neg \\sigma)\\). Then \\(\\neg \\sigma\\) will be equal to \\(\\beta \\Longrightarrow \\gamma\\). However \\(\\beta\\) and \\(\\gamma\\) satisfy exactly one of the first 3 conditions in Definition 1.2 so it will be impossible that \\(\\neg \\sigma\\) and \\(\\beta \\Longrightarrow \\gamma\\) are equal.\n\nTherefore \\((\\beta \\Longrightarrow \\gamma)\\) satisfy exactly the 3 condition in Definition 1.2.\n\n\n\n\n\n\n\n\n1.1.2 Truth Assignments\nWhether a given formula \\(\\varphi\\) of \\(\\mathcal{L}_p\\) is true or false usually depends on how we interpret the atomic formulas which appear in \\(\\varphi\\) (Bilaniuk 2009, 7).\n\nDefinition 1.4 (Truth assignment) A truth assignment is a function \\(v\\) whose domain is the set of all formulas of \\(\\mathcal{L}_p\\) and whose range is the set \\(\\{ T, F \\}\\) of truth values, such that:\n\n\\(v(A_n)\\) is defined for every atomic formula \\(A_n\\).\nFor any formula \\(\\alpha\\):\n\n\\[v((\\neg \\alpha)) = \\begin{cases}\n                     T & \\text{ if } v(\\alpha) = F \\\\\n                     F & \\text{ if } v(\\alpha) = T\n                     \\end{cases}\\]\n\nFor any formulas \\(\\alpha\\) and \\(\\beta\\):\n\n\\[v((\\alpha \\Longrightarrow \\beta)) = \\begin{cases}\n                     F & \\text{ if } v(\\alpha) = T \\text{ and } v(\\beta) = F \\\\\n                     T & \\text{ otherwise }\n                     \\end{cases}\\]\n\nFor example, let \\(v(A_0) = T\\) and \\(v(A_1) = F\\) then it is possible to determine \\(v(((\\neg A_1) \\Longrightarrow (A_0 \\Longrightarrow A_1)))\\) in the following way:\n\n\\(v((\\neg A_1)) = T\\)\n\\(v((A_0 \\Longrightarrow A_1)) = F\\)\n\\(v(((\\neg A_1) \\Longrightarrow (A_0 \\Longrightarrow A_1))) = F\\)\n\nA convenient way to write out the determination of the truth value of a formula on a given truth assignment is to use a truth table:\n\n\n\nTable 1.1: True table example\n\n\n\n\n\n\n\\(A_0\\)\n\n\n\\(A_1\\)\n\n\n\\((\\neg A_1)\\)\n\n\n\\((A_0 \\Longrightarrow A_1)\\)\n\n\n\\(((\\neg A_1) \\Longrightarrow (A_0 \\Longrightarrow A_1))\\)\n\n\n\n\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\n\n\n\n\nUsing what is described in Section 1.1.1.1 we have the following:\n\\[v((\\alpha \\land \\beta)) = \\begin{cases}\n                     T & \\text{ if } v(\\alpha) = T \\text{ and } v(\\beta) = T \\\\\n                     F & \\text{ otherwise }\n                     \\end{cases}\\]\n\\[v((\\alpha \\lor \\beta)) = \\begin{cases}\n                     F & \\text{ if } v(\\alpha) = F \\text{ and } v(\\beta) = F \\\\\n                     T & \\text{ otherwise }\n                     \\end{cases}\\]\n\\[v((\\alpha \\iff \\beta)) = \\begin{cases}\n                     T & \\text{ if } v(\\alpha) = v(\\beta) \\\\\n                     F & \\text{ otherwise }\n                     \\end{cases}\\]\nAlso it is important to point out that in Definition 1.4 \\(v((\\alpha \\Longrightarrow \\beta))\\) is known as material implication (Egré and Rott 2021). In a 2-valued propositional framework there are 16 possible truth tables for 2 formulas \\(\\alpha\\) and \\(\\beta\\) as it is shown in Table 1.2, Table 1.3, Table 1.4 and Table 1.5\n\n\n\nTable 1.2: True tables contradiction, tautology, \\(\\alpha\\) and \\(\\beta\\)\n\n\n\n\n\n\n\\(\\alpha\\)\n\n\n\\(\\beta\\)\n\n\n\\(\\bot\\)\n\n\n\\(\\top\\)\n\n\n\\(\\alpha\\)\n\n\n\\(\\beta\\)\n\n\n\n\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\n\n\n\n\n\n\n\nTable 1.3: True tables \\(\\neg \\alpha\\), \\(\\neg \\beta\\), NOR and NAND\n\n\n\n\n\n\n\\(\\alpha\\)\n\n\n\\(\\beta\\)\n\n\n\\(\\neg \\alpha\\)\n\n\n\\(\\neg \\beta\\)\n\n\n\\(\\Downarrow\\)\n\n\n\\(\\Uparrow\\)\n\n\n\n\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\n\n\n\n\n\n\n\nTable 1.4: True tables AND, OR, material implication (IMPLY) and biconditional (XNOR)\n\n\n\n\n\n\n\\(\\alpha\\)\n\n\n\\(\\beta\\)\n\n\n\\(\\land\\)\n\n\n\\(\\lor\\)\n\n\n\\(\\Longrightarrow\\)\n\n\n\\(\\iff\\)\n\n\n\n\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\n\n\n\n\n\n\n\nTable 1.5: True tables converse implication, material nonimplication (NIMPLY), converse material nonimplication and XOR\n\n\n\n\n\n\n\\(\\alpha\\)\n\n\n\\(\\beta\\)\n\n\n\\(\\Longleftarrow\\)\n\n\n\\(\\not\\Longrightarrow\\)\n\n\n\\(\\not\\Longleftarrow\\)\n\n\n\\(\\oplus\\)\n\n\n\n\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\n\n\n\n\nAssuming that we want:\n\n\\(v(\\alpha) = T\\), \\(v(\\beta) = T\\) and \\(v((\\alpha \\Longrightarrow \\beta)) = T\\)\n\\(v(\\alpha) = T\\), \\(v(\\beta) = F\\) and \\(v((\\alpha \\Longrightarrow \\beta)) = F\\)\n\nFrom the 16 possible truth tables only 4 comply with these both conditions:\n\n\n\nTable 1.6: Possible true tables for \\(\\Longrightarrow\\) in a 2-valued propositional framework\n\n\n\n\n\n\n\\(\\alpha\\)\n\n\n\\(\\beta\\)\n\n\n\\(\\land\\)\n\n\n\\(\\iff\\)\n\n\n\\(\\beta\\)\n\n\n\\(\\Longrightarrow\\)\n\n\n\n\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\n\n\n\n\nIn Table 1.6 the first true table corresponds to \\(\\land\\), the second corresponds to \\(\\iff\\) and the third corresponds to \\(\\beta\\) where these tables are not suitable for \\(\\Longrightarrow\\). Therefore the last table is the only truth table suitable for \\(\\Longrightarrow\\) assuming we want the both conditions pointed above in a 2-valued propositional framework.\n\nProposition 1.1 (True values of atomic formulas) Suppose \\(\\delta\\) is any formula and \\(u\\) and \\(v\\) are truth assignments such that \\(u(A_n) = v(A_n)\\) for all atomic formulas \\(A_n\\) which occur in \\(\\delta\\). Then \\(u(\\delta) = v(\\delta)\\).\n\n\nProof. By strong induction on \\(n\\), the number of connectives (occurrences of \\(\\neg\\) or \\(\\Longrightarrow\\)) in a formula \\(\\delta\\) of \\(\\mathcal{L}_P\\)\nBase step \\((n = 0)\\): If \\(\\delta\\) is a formula of \\(\\mathcal{L}_P\\) with no connectives by Definition 1.2 is an atomic formula. So \\(\\delta = A_i\\) for some \\(i \\in \\mathbb{N}\\) where \\(u(A_i) = v(A_i)\\). Therefore \\(u(\\delta) = v(\\delta)\\).\nInduction hypothesis \\((n \\leq k)\\): Assume that for a formula \\(\\delta\\) with \\(n \\leq k\\) connectives we have that for \\(u\\) and \\(v\\) truth assignments such that \\(u(A_n) = v(A_n)\\) for all atomic formulates \\(A_n\\) which occur in the \\(\\delta\\) we have that \\(u(\\delta) = v(\\delta)\\)\nInduction step \\((n = k + 1)\\): Suppose \\(\\varphi\\) is a formula with \\(n = k + 1\\) connectives. From Definition 1.2 \\(\\varphi\\) must be either:\n\n\\((\\neg \\delta)\\) for some formula \\(\\delta\\) with \\(k\\) connectives.\n\nTherefore \\(v(\\delta) = u(\\delta)\\) and by Definition 1.4 \\(v(\\neg \\delta) = u( \\neg \\delta)\\) which means that \\(v(\\varphi) = u(\\varphi)\\).\n\n\\((\\delta \\Longrightarrow \\beta)\\) for some formulas \\(\\delta\\) and \\(\\beta\\) with \\(k\\) connectives.\n\nTherefore \\(v(\\delta) = u(\\delta)\\) and \\(v(\\beta) = u(\\beta)\\) and by Definition 1.4 \\(v(\\delta \\Longrightarrow \\delta) = u(\\delta \\Longrightarrow \\delta)\\) which means that \\(v(\\varphi) = u(\\varphi)\\).\n\n\n\n\nCorollary 1.1 (True values of atomic formulas) Suppose \\(u\\) and \\(v\\) are truth assignments such that \\(u(A_n) = v(A_n)\\) for every atomic formula \\(A_n\\). Then \\(u = v\\), i.e. \\(u(\\varphi) = v(\\varphi)\\) for every formula \\(\\varphi\\).\n\n\nProof. Because \\(u(A_n) = v(A_n)\\) for every atomic formula \\(A_n\\) in \\(\\mathcal{L}_p\\) we can take any formula \\(\\varphi\\) and apply Proposition 1.1. Thefefore \\(v(\\varphi) = u(\\varphi)\\) but \\(\\varphi\\) is any formula in \\(\\mathcal{L}_p\\) so it applies to every formula.\n\n\nDefinition 1.5 If \\(v\\) is a truth assignment and \\(\\varphi\\) is a formula, we will often say that \\(v\\) satisfies \\(\\varphi\\) if \\(v(\\varphi) = T\\).\nSimilarly, if \\(\\Sigma\\) is a set of formulas, we will often say that \\(v\\) satisfies \\(\\Sigma\\) if \\(v(\\sigma) = T\\) for every \\(\\sigma \\in \\Sigma\\).\nWe will say that \\(\\varphi\\) (respectively, \\(\\Sigma\\)) is satisfiable if there is some truth assignment which satisfies it.\n\n\nDefinition 1.6 A formula \\(\\varphi\\) is a tautology if it is satisfied by every truth assignment.\nA formula \\(\\psi\\) is a contradiction if there is no truth assignment which satisfies it.\n\nFor example, \\((A_4 \\Longrightarrow A_4)\\) is a tautology, \\((\\neg (A_4 \\Longrightarrow A_4))\\) is a contradiction and \\(A_4\\) neither of them.\n\n\n\nTable 1.7: Example of a tautology and a contradiction\n\n\n\n\n\n\n\\(A_4\\)\n\n\n\\((A_4 \\Longrightarrow A_4)\\)\n\n\n\\((\\neg (A_4 \\Longrightarrow A_4))\\)\n\n\n\n\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\n\n\n\n\n\nProposition 1.2 If \\(\\alpha\\) is any formula, then \\(((\\neg \\alpha) \\lor \\alpha)\\) is a tautology and \\(((\\neg \\alpha) \\land \\alpha)\\) is a contradiction.\n\n\nProof. \n\n\n\n\n\\(\\alpha\\)\n\n\n\\((\\neg \\alpha)\\)\n\n\n\\(((\\neg \\alpha) \\lor \\alpha)\\)\n\n\n\\(((\\neg \\alpha) \\land \\alpha)\\)\n\n\n\n\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\n\n\\(F\\)\n\n\n\\(T\\)\n\n\n\\(T\\)\n\n\n\\(F\\)\n\n\n\n\n\n\nProposition 1.3 A formula \\(\\beta\\) is a tautology if and only if \\(\\neg \\beta\\) is a contradiction.\n\n\nProof. For all \\(v\\), where \\(v\\) is a true assignment, \\(v(\\beta) = T\\). By Definition 1.4 \\(v((\\neg \\beta)) = F\\) so \\((\\neg \\beta)\\) is a contradiction.\nFor all \\(v\\), where \\(v\\) is a true assignment, \\(v((\\neg \\beta)) = F\\). By Definition 1.4 \\(v(\\beta) = T\\) so \\(\\beta\\) is a tautology.\n\n\nDefinition 1.7 A set of formulas \\(\\Sigma\\) implies a formula \\(\\varphi\\), written as \\(\\Sigma \\models \\varphi\\), if every truth assignment \\(v\\) which satisfies \\(\\Sigma\\) also satisfies \\(\\varphi\\).\nWe will often write \\(\\Sigma \\not \\models \\varphi\\) if it is not the case that \\(\\Sigma \\models \\varphi\\).\nIn the case where \\(\\Sigma\\) is empty, we will usually write \\(\\models \\varphi\\) instead of \\(\\emptyset \\models \\varphi\\).\nSimilarly, if \\(\\Delta\\) and \\(\\Gamma\\) are sets of formulas, then \\(\\Delta\\) implies \\(\\Gamma\\), written as \\(\\Delta \\models \\Gamma\\), if every truth assignment \\(v\\) which satisfies \\(\\Delta\\) also satisfies \\(\\Gamma\\).\n\n\n\n\n\nBilaniuk, Stefan. 2009. A Problem Course in Mathematical Logic. http://euclid.trentu.ca/math/sb/pcml/pcml.html.\n\n\nChurch, Alonzo. 1996. Introduction to Mathematical Logic. 10th ed. Princeton Landmarks in Mathematics and Physics. Princeton, NJ Chichester, West Sussex: Princeton University Press.\n\n\nEgré, Paul, and Hans Rott. 2021. “The Logic of Conditionals.” In The Stanford Encyclopedia of Philosophy, edited by Edward N. Zalta, Winter 2021. Metaphysics Research Lab, Stanford University. https://plato.stanford.edu/archives/win2021/entries/logic-conditionals/.\n\n\nŁukasiewicz, Jan, and Ludwik Borkowski. 1970. Selected Works. Studies in Logic and the Foundations of Mathematics. Amsterdam: North-Holland Pub. Co.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>See https://quarto.org/docs/computations/execution-options.html#engine-binding to specify why knitr is used</span>"
    ]
  },
  {
    "objectID": "chapter_1.html#footnotes",
    "href": "chapter_1.html#footnotes",
    "title": "1  Basic Facts and Notions of Logic and Set Theory",
    "section": "",
    "text": "See (Church 1996, 70) for more details.↩︎",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>See https://quarto.org/docs/computations/execution-options.html#engine-binding to specify why knitr is used</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Bilaniuk, Stefan. 2009. A Problem Course in Mathematical Logic.\nhttp://euclid.trentu.ca/math/sb/pcml/pcml.html.\n\n\nChurch, Alonzo. 1996. Introduction to Mathematical Logic. 10th\ned. Princeton Landmarks in Mathematics and Physics. Princeton, NJ\nChichester, West Sussex: Princeton University Press.\n\n\nEgré, Paul, and Hans Rott. 2021. “The Logic of\nConditionals.” In The Stanford\nEncyclopedia of Philosophy, edited by\nEdward N. Zalta, Winter 2021. Metaphysics Research Lab, Stanford\nUniversity. https://plato.stanford.edu/archives/win2021/entries/logic-conditionals/.\n\n\nŁukasiewicz, Jan, and Ludwik Borkowski. 1970. Selected Works.\nStudies in Logic and the Foundations of Mathematics. Amsterdam:\nNorth-Holland Pub. Co.\n\n\nMendelson, Elliott. 2008. Number Systems and the Foundations of\nAnalysis. Mineola, N.Y: Dover Publications.",
    "crumbs": [
      "References"
    ]
  }
]